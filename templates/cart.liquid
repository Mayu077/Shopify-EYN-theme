<div class="cart-page">
  <div class="container">
    <h1>Shopping Cart</h1>
    
    {% if cart.item_count > 0 %}
      <div class="cart-layout">
        <!-- Cart Items -->
        <div class="cart-items">
          {% form 'cart', cart %}
            {% for item in cart.items %}
              <div class="cart-item" data-item-key="{{ item.key }}">
                <div class="cart-item-image">
                  <a href="{{ item.url }}">
                    <img src="{{ item.image | image_url: width: 120 }}" alt="{{ item.title }}">
                  </a>
                </div>
                
                <div class="cart-item-details">
                  <h3><a href="{{ item.url }}">{{ item.title }}</a></h3>
                  
                  {% if item.variant.title != 'Default Title' %}
                    <p class="cart-item-variant">{{ item.variant.title }}</p>
                  {% endif %}
                  
                  <div class="cart-item-price">
                    {% if item.original_price != item.final_price %}
                      <span class="original-price">{{ item.original_price | money }}</span>
                    {% endif %}
                    <span class="final-price">{{ item.final_price | money }}</span>
                  </div>
                  
                  {% if item.original_price != item.final_price %}
                    <div class="cart-item-discount">
                      You saved {{ item.original_price | minus: item.final_price | money }}
                    </div>
                  {% endif %}
                </div>
                
                <div class="cart-item-quantity">
                  <label for="quantity-{{ item.key }}">Quantity:</label>
                  <div class="quantity-controls">
                    <button type="button" onclick="updateQuantity('{{ item.key }}', {{ item.quantity | minus: 1 }})">-</button>
                    <input type="number" 
                           id="quantity-{{ item.key }}" 
                           name="updates[]" 
                           value="{{ item.quantity }}" 
                           min="1" 
                           onchange="updateQuantity('{{ item.key }}', this.value)">
                    <button type="button" onclick="updateQuantity('{{ item.key }}', {{ item.quantity | plus: 1 }})">+</button>
                  </div>
                </div>
                
                <div class="cart-item-total">
                  <span class="item-total">{{ item.final_line_price | money }}</span>
                </div>
                
                <div class="cart-item-remove">
                  <button type="button" onclick="removeItem('{{ item.key }}')" class="remove-btn">√ó</button>
                </div>
              </div>
            {% endfor %}
            
            <!-- Cart Actions -->
            <div class="cart-actions">
              <button type="submit" name="update" class="update-cart-btn">Update Cart</button>
              <a href="{{ routes.all_products_collection_url }}" class="continue-shopping">Continue Shopping</a>
            </div>
          {% endform %}
        </div>
        
        <!-- Cart Summary -->
        <div class="cart-summary">
          <h3>Order Summary</h3>
          
          <div class="summary-row">
            <span>Subtotal ({{ cart.item_count }} items)</span>
            <span>{{ cart.items_subtotal_price | money }}</span>
          </div>
          
          {% if cart.cart_level_discount_applications.size > 0 %}
            {% for discount in cart.cart_level_discount_applications %}
              <div class="summary-row discount">
                <span>Discount ({{ discount.title }})</span>
                <span>-{{ discount.total_allocated_amount | money }}</span>
              </div>
            {% endfor %}
          {% endif %}
          
          {% if cart.taxes_included %}
            <div class="summary-row">
              <span>Taxes included</span>
            </div>
          {% endif %}
          
          <div class="summary-row total">
            <span>Total</span>
            <span>{{ cart.total_price | money }}</span>
          </div>
          
          <!-- Discount Code -->
          <div class="discount-code">
            <h4>Discount Code</h4>
            {% form 'cart', cart %}
              <div class="discount-input">
                <input type="text" name="discount" placeholder="Enter discount code" value="{{ cart.discount_applications.first.title }}">
                <button type="submit" name="apply">Apply</button>
              </div>
            {% endform %}
          </div>
          
          <!-- Checkout Button -->
          <div class="checkout-section">
            <button onclick="window.location.href='{{ routes.checkout_url }}'" class="checkout-btn">
              Proceed to Checkout
            </button>
            
            <div class="payment-methods">
              <p>We accept:</p>
              <div class="payment-icons">
                <span>üí≥</span>
                <span>üè¶</span>
                <span>üì±</span>
              </div>
            </div>
          </div>
          
          <!-- Security Notice -->
          <div class="security-notice">
            <p>üîí Secure checkout powered by Shopify</p>
          </div>
        </div>
      </div>
      
      <!-- Recommended Products -->
      <div class="recommended-products">
        <h3>You might also like</h3>
        <div class="products-grid">
          {% assign recommended_products = collections.all.products | limit: 4 %}
          {% for product in recommended_products %}
            {% unless cart.items contains product %}
              <div class="product-card">
                <div class="product-image">
                  <a href="{{ product.url }}">
                    <img src="{{ product.featured_image | image_url: width: 200 }}" alt="{{ product.title }}">
                  </a>
                </div>
                <div class="product-info">
                  <h4><a href="{{ product.url }}">{{ product.title }}</a></h4>
                  <p class="price">{{ product.price | money }}</p>
                  <button onclick="addToCart({{ product.selected_or_first_available_variant.id }})" class="add-to-cart">
                    Add to Cart
                  </button>
                </div>
              </div>
            {% endunless %}
          {% endfor %}
        </div>
      </div>
      
    {% else %}
      <!-- Empty Cart -->
      <div class="empty-cart">
        <div class="empty-cart-icon">üõí</div>
        <h2>Your cart is empty</h2>
        <p>Looks like you haven't added any items to your cart yet.</p>
        <a href="{{ routes.all_products_collection_url }}" class="start-shopping-btn">Start Shopping</a>
      </div>
    {% endif %}
  </div>
</div>

<script>
function updateQuantity(itemKey, newQuantity) {
  if (newQuantity < 1) {
    removeItem(itemKey);
    return;
  }
  
  const formData = {
    updates: {}
  };
  formData.updates[itemKey] = newQuantity;
  
  fetch('/cart/update.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(formData)
  })
  .then(response => response.json())
  .then(cart => {
    updateCartDisplay(cart);
  })
  .catch(error => {
    console.error('Error updating cart:', error);
  });
}

function removeItem(itemKey) {
  const formData = {
    updates: {}
  };
  formData.updates[itemKey] = 0;
  
  fetch('/cart/update.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(formData)
  })
  .then(response => response.json())
  .then(cart => {
    updateCartDisplay(cart);
  })
  .catch(error => {
    console.error('Error removing item:', error);
  });
}

function addToCart(variantId) {
  const formData = {
    items: [{
      id: variantId,
      quantity: 1
    }]
  };
  
  fetch('/cart/add.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(formData)
  })
  .then(response => response.json())
  .then(data => {
    // Reload the page to show updated cart
    window.location.reload();
  })
  .catch(error => {
    console.error('Error adding to cart:', error);
  });
}

function updateCartDisplay(cart) {
  // Update cart count in header
  document.querySelector('.cart-count').textContent = cart.item_count;
  
  // Reload the page to show updated cart
  window.location.reload();
}

// Auto-update cart when quantity inputs change
document.addEventListener('DOMContentLoaded', function() {
  const quantityInputs = document.querySelectorAll('input[name="updates[]"]');
  
  quantityInputs.forEach(input => {
    input.addEventListener('change', function() {
      const itemKey = this.closest('.cart-item').dataset.itemKey;
      const newQuantity = parseInt(this.value);
      updateQuantity(itemKey, newQuantity);
    });
  });
});
</script> 